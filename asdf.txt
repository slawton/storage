	uint32_t ebp;
        uint32_t eip;

        uint32_t * pebp;

        struct Eipdebuginfo debug_info;
        char function_name[100];

        ebp = read_ebp();
        eip = read_eip();

        cprintf("\27[33mStack backtrace:\27[m\n");
        while(ebp != 0x00000000) {
                pebp = (uint32_t *) ebp;
                debuginfo_eip(eip, &debug_info);

                strcpy(function_name, debug_info.eip_fn_name);
                function_name[debug_info.eip_fn_namelen] = '\0';
               
                cprintf("\27[39m%s\27[m:\27[34m%d\27[m: \27[39m%s\27[m+\27[34m%x\27[m\n", debug_info.eip_file, debug_info.eip_line, function_name, eip-debug_info.eip_fn_addr);
                cprintf("  \27[32mebp \27[31;47m%08x\27[m  \27[32meip \27[31;47m%08x\27[;m  \27[32margs \27[31;47m%08x %08x %08x %08x %08x\n",
                        ebp, eip, *(pebp+2), *(pebp+3), *(pebp+4), *(pebp+5), *(pebp+6));
                ebp = *pebp;
                eip = *(pebp+1);
        }

